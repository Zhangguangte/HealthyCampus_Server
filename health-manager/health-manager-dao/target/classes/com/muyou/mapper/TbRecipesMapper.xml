<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.muyou.mapper.TbRecipesMapper" >
  <resultMap id="BaseResultMap" type="com.muyou.pojo.TbRecipes" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="functional" property="functional" jdbcType="VARCHAR" />
    <result column="flavor" property="flavor" jdbcType="VARCHAR" />
    <result column="ingredients" property="ingredients" jdbcType="VARCHAR" />
    <result column="process" property="process" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="practice" property="practice" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="calorie" property="calorie" jdbcType="VARCHAR" />
    <result column="components" property="components" jdbcType="VARCHAR" />
    <result column="weeks" property="weeks" jdbcType="VARCHAR" />
    <result column="physique" property="physique" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, functional, flavor, ingredients, process, time, practice, url, type, calorie, 
    components, weeks, physique, created, updated, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.muyou.pojo.TbRecipesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_recipes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_recipes
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_recipes
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.muyou.pojo.TbRecipesExample" >
    delete from tb_recipes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.muyou.pojo.TbRecipes" useGeneratedKeys="true" keyProperty="id">
    insert into tb_recipes (id, name, functional, 
      flavor, ingredients, process, 
      time, practice, url, 
      type, calorie, components, 
      weeks, physique, created, 
      updated, status)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{functional,jdbcType=VARCHAR}, 
      #{flavor,jdbcType=VARCHAR}, #{ingredients,jdbcType=VARCHAR}, #{process,jdbcType=VARCHAR}, 
      #{time,jdbcType=VARCHAR}, #{practice,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{calorie,jdbcType=VARCHAR}, #{components,jdbcType=VARCHAR}, 
      #{weeks,jdbcType=VARCHAR}, #{physique,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, 
      #{updated,jdbcType=TIMESTAMP}, #{status,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.muyou.pojo.TbRecipes" >
    insert into tb_recipes
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="functional != null" >
        functional,
      </if>
      <if test="flavor != null" >
        flavor,
      </if>
      <if test="ingredients != null" >
        ingredients,
      </if>
      <if test="process != null" >
        process,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="practice != null" >
        practice,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="calorie != null" >
        calorie,
      </if>
      <if test="components != null" >
        components,
      </if>
      <if test="weeks != null" >
        weeks,
      </if>
      <if test="physique != null" >
        physique,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="functional != null" >
        #{functional,jdbcType=VARCHAR},
      </if>
      <if test="flavor != null" >
        #{flavor,jdbcType=VARCHAR},
      </if>
      <if test="ingredients != null" >
        #{ingredients,jdbcType=VARCHAR},
      </if>
      <if test="process != null" >
        #{process,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="practice != null" >
        #{practice,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="calorie != null" >
        #{calorie,jdbcType=VARCHAR},
      </if>
      <if test="components != null" >
        #{components,jdbcType=VARCHAR},
      </if>
      <if test="weeks != null" >
        #{weeks,jdbcType=VARCHAR},
      </if>
      <if test="physique != null" >
        #{physique,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.muyou.pojo.TbRecipesExample" resultType="java.lang.Integer" >
    select count(*) from tb_recipes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_recipes
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.functional != null" >
        functional = #{record.functional,jdbcType=VARCHAR},
      </if>
      <if test="record.flavor != null" >
        flavor = #{record.flavor,jdbcType=VARCHAR},
      </if>
      <if test="record.ingredients != null" >
        ingredients = #{record.ingredients,jdbcType=VARCHAR},
      </if>
      <if test="record.process != null" >
        process = #{record.process,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.practice != null" >
        practice = #{record.practice,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.calorie != null" >
        calorie = #{record.calorie,jdbcType=VARCHAR},
      </if>
      <if test="record.components != null" >
        components = #{record.components,jdbcType=VARCHAR},
      </if>
      <if test="record.weeks != null" >
        weeks = #{record.weeks,jdbcType=VARCHAR},
      </if>
      <if test="record.physique != null" >
        physique = #{record.physique,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_recipes
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      functional = #{record.functional,jdbcType=VARCHAR},
      flavor = #{record.flavor,jdbcType=VARCHAR},
      ingredients = #{record.ingredients,jdbcType=VARCHAR},
      process = #{record.process,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=VARCHAR},
      practice = #{record.practice,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      calorie = #{record.calorie,jdbcType=VARCHAR},
      components = #{record.components,jdbcType=VARCHAR},
      weeks = #{record.weeks,jdbcType=VARCHAR},
      physique = #{record.physique,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.muyou.pojo.TbRecipes" >
    update tb_recipes
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="functional != null" >
        functional = #{functional,jdbcType=VARCHAR},
      </if>
      <if test="flavor != null" >
        flavor = #{flavor,jdbcType=VARCHAR},
      </if>
      <if test="ingredients != null" >
        ingredients = #{ingredients,jdbcType=VARCHAR},
      </if>
      <if test="process != null" >
        process = #{process,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="practice != null" >
        practice = #{practice,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="calorie != null" >
        calorie = #{calorie,jdbcType=VARCHAR},
      </if>
      <if test="components != null" >
        components = #{components,jdbcType=VARCHAR},
      </if>
      <if test="weeks != null" >
        weeks = #{weeks,jdbcType=VARCHAR},
      </if>
      <if test="physique != null" >
        physique = #{physique,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.muyou.pojo.TbRecipes" >
    update tb_recipes
    set name = #{name,jdbcType=VARCHAR},
      functional = #{functional,jdbcType=VARCHAR},
      flavor = #{flavor,jdbcType=VARCHAR},
      ingredients = #{ingredients,jdbcType=VARCHAR},
      process = #{process,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      practice = #{practice,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      calorie = #{calorie,jdbcType=VARCHAR},
      components = #{components,jdbcType=VARCHAR},
      weeks = #{weeks,jdbcType=VARCHAR},
      physique = #{physique,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
	<!-- 前台 -->
  <select id="getRecipesByThreeMeals" resultMap="BaseResultMap">
  	SELECT * from tb_recipes limit 0,15
  </select>
  
 <!-- 后台 -->
	<select id="selectItemByCondition" resultMap="BaseResultMap">
    SELECT 
    	DISTINCT(re.id),url,re.name,functional,flavor,process,time,re.type,calorie,physique,re.status,re.created
    FROM 
    <if test="cid == -1">
    	tb_recipes re 
  	</if>
    <if test="cid != -1">
    	(tb_recipes re RIGHT JOIN tb_item_rela_cate r on re.id = r.item_id ) RIGHT JOIN tb_cate c on r.cate_id = c.id
  	</if>
    WHERE (
	   	re.id LIKE #{search}
	   	OR	re.name LIKE #{search} 		 
	   	OR	functional LIKE #{search} 		 
	    OR  flavor LIKE #{search}
	    OR  ingredients LIKE #{search}
	    OR  process LIKE #{search}
	    OR  time LIKE #{search}
	    OR  practice LIKE #{search}
	    OR  physique LIKE #{search})
    <if test="cid != -1">
      AND c.id = #{cid}
    </if>
    ORDER BY
    ${orderCol}
    ${orderDir}
  </select>
  
  <select id="selectItemByMultiCondition" resultMap="BaseResultMap">
    SELECT 
    	DISTINCT(re.id),url,re.name,functional,flavor,process,time,re.type,calorie,physique,re.status,re.created
    FROM
	<if test="cid == -1">
    	tb_recipes re 
  	</if>
    <if test="cid != -1">
    	(tb_recipes re RIGHT JOIN tb_item_rela_cate r on re.id = r.item_id ) RIGHT JOIN tb_cate c on r.cate_id = c.id
  	</if>
   	WHERE (
	   	re.id LIKE #{search}
	   	OR	re.name LIKE #{search} 		 
	   	OR	functional LIKE #{search} 		 
	    OR  flavor LIKE #{search}
	    OR  ingredients LIKE #{search}
	    OR  process LIKE #{search}
	    OR  time LIKE #{search}
	    OR  practice LIKE #{search}
	    OR  physique LIKE #{search})
    <if test="cid != -1">
      AND c.id = #{cid}
    </if>
    <if test="minDate != null and minDate != '' and maxDate != null and maxDate != ''">
      AND re.created BETWEEN #{minDate} AND #{maxDate}
    </if>
    ORDER BY
	    ${orderCol}
	    ${orderDir}
  </select>
	
	<select id="selectItemByIds" resultMap="BaseResultMap">
	    SELECT 
	    	DISTINCT(re.id),url,re.name,functional,flavor,process,time,re.type,calorie,physique,re.status,re.created
	    FROM
	    	tb_recipes re 
	    WHERE
	    	id in (${ids})
	    ORDER BY
		    ${orderCol}
		    ${orderDir}
  	</select>

	
</mapper>